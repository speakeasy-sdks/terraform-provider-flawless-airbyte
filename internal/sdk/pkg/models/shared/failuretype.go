// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// FailureType - Categorizes well known errors into types for programmatic handling. If not set, the type of error is not well known.
type FailureType string

const (
	FailureTypeConfigError        FailureType = "config_error"
	FailureTypeSystemError        FailureType = "system_error"
	FailureTypeManualCancellation FailureType = "manual_cancellation"
	FailureTypeRefreshSchema      FailureType = "refresh_schema"
	FailureTypeHeartbeatTimeout   FailureType = "heartbeat_timeout"
)

func (e FailureType) ToPointer() *FailureType {
	return &e
}

func (e *FailureType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "config_error":
		fallthrough
	case "system_error":
		fallthrough
	case "manual_cancellation":
		fallthrough
	case "refresh_schema":
		fallthrough
	case "heartbeat_timeout":
		*e = FailureType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FailureType: %v", v)
	}
}
