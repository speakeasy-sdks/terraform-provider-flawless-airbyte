// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type JobStatus string

const (
	JobStatusPending    JobStatus = "pending"
	JobStatusRunning    JobStatus = "running"
	JobStatusIncomplete JobStatus = "incomplete"
	JobStatusFailed     JobStatus = "failed"
	JobStatusSucceeded  JobStatus = "succeeded"
	JobStatusCancelled  JobStatus = "cancelled"
)

func (e JobStatus) ToPointer() *JobStatus {
	return &e
}

func (e *JobStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending":
		fallthrough
	case "running":
		fallthrough
	case "incomplete":
		fallthrough
	case "failed":
		fallthrough
	case "succeeded":
		fallthrough
	case "cancelled":
		*e = JobStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for JobStatus: %v", v)
	}
}
