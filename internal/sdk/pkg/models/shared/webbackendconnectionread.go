// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type WebBackendConnectionRead struct {
	// Describes the difference between two Airbyte catalogs.
	CatalogDiff   *CatalogDiff    `json:"catalogDiff,omitempty"`
	CatalogID     *string         `json:"catalogId,omitempty"`
	ConnectionID  string          `json:"connectionId"`
	Destination   DestinationRead `json:"destination"`
	DestinationID string          `json:"destinationId"`
	Geography     *Geography      `json:"geography,omitempty"`
	IsSyncing     bool            `json:"isSyncing"`
	// epoch time of the latest sync job. null if no sync job has taken place.
	LatestSyncJobCreatedAt *int64     `json:"latestSyncJobCreatedAt,omitempty"`
	LatestSyncJobStatus    *JobStatus `json:"latestSyncJobStatus,omitempty"`
	Name                   string     `json:"name"`
	// Method used for computing final namespace in destination
	NamespaceDefinition *NamespaceDefinitionType `json:"namespaceDefinition,omitempty"`
	// Used when namespaceDefinition is 'customformat'. If blank then behaves like namespaceDefinition = 'destination'. If "${SOURCE_NAMESPACE}" then behaves like namespaceDefinition = 'source'.
	NamespaceFormat              *string                      `json:"namespaceFormat,omitempty"`
	NonBreakingChangesPreference NonBreakingChangesPreference `json:"nonBreakingChangesPreference"`
	NotifySchemaChanges          bool                         `json:"notifySchemaChanges"`
	NotifySchemaChangesByEmail   bool                         `json:"notifySchemaChangesByEmail"`
	OperationIds                 []string                     `json:"operationIds,omitempty"`
	Operations                   []OperationRead              `json:"operations,omitempty"`
	// Prefix that will be prepended to the name of each stream when it is written to the destination.
	Prefix *string `json:"prefix,omitempty"`
	// optional resource requirements to run workers (blank for unbounded allocations)
	ResourceRequirements *ResourceRequirements `json:"resourceRequirements,omitempty"`
	// if null, then no schedule is set.
	Schedule *ConnectionSchedule `json:"schedule,omitempty"`
	// schedule for when the the connection should run, per the schedule type
	ScheduleData *ConnectionScheduleData `json:"scheduleData,omitempty"`
	// determine how the schedule data should be interpreted
	ScheduleType *ConnectionScheduleType `json:"scheduleType,omitempty"`
	SchemaChange SchemaChange            `json:"schemaChange"`
	Source       SourceRead              `json:"source"`
	SourceID     string                  `json:"sourceId"`
	// Active means that data is flowing through the connection. Inactive means it is not. Deprecated means the connection is off and cannot be re-activated. the schema field describes the elements of the schema that will be synced.
	Status ConnectionStatus `json:"status"`
	// describes the available schema (catalog).
	SyncCatalog AirbyteCatalog `json:"syncCatalog"`
}
