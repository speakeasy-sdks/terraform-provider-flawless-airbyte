// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// FailureOrigin - Indicates where the error originated. If not set, the origin of error is not well known.
type FailureOrigin string

const (
	FailureOriginSource          FailureOrigin = "source"
	FailureOriginDestination     FailureOrigin = "destination"
	FailureOriginReplication     FailureOrigin = "replication"
	FailureOriginPersistence     FailureOrigin = "persistence"
	FailureOriginNormalization   FailureOrigin = "normalization"
	FailureOriginDbt             FailureOrigin = "dbt"
	FailureOriginAirbytePlatform FailureOrigin = "airbyte_platform"
	FailureOriginUnknown         FailureOrigin = "unknown"
)

func (e FailureOrigin) ToPointer() *FailureOrigin {
	return &e
}

func (e *FailureOrigin) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "source":
		fallthrough
	case "destination":
		fallthrough
	case "replication":
		fallthrough
	case "persistence":
		fallthrough
	case "normalization":
		fallthrough
	case "dbt":
		fallthrough
	case "airbyte_platform":
		fallthrough
	case "unknown":
		*e = FailureOrigin(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FailureOrigin: %v", v)
	}
}
