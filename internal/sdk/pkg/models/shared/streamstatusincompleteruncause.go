// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// StreamStatusIncompleteRunCause - Values:
//   - `FAILED` - A failure has occurred
//   - `CANCELED` - The run has been canceled
type StreamStatusIncompleteRunCause string

const (
	StreamStatusIncompleteRunCauseFailed   StreamStatusIncompleteRunCause = "FAILED"
	StreamStatusIncompleteRunCauseCanceled StreamStatusIncompleteRunCause = "CANCELED"
)

func (e StreamStatusIncompleteRunCause) ToPointer() *StreamStatusIncompleteRunCause {
	return &e
}

func (e *StreamStatusIncompleteRunCause) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "FAILED":
		fallthrough
	case "CANCELED":
		*e = StreamStatusIncompleteRunCause(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StreamStatusIncompleteRunCause: %v", v)
	}
}
