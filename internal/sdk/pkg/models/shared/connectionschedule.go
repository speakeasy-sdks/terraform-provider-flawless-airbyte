// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConnectionScheduleTimeUnit string

const (
	ConnectionScheduleTimeUnitMinutes ConnectionScheduleTimeUnit = "minutes"
	ConnectionScheduleTimeUnitHours   ConnectionScheduleTimeUnit = "hours"
	ConnectionScheduleTimeUnitDays    ConnectionScheduleTimeUnit = "days"
	ConnectionScheduleTimeUnitWeeks   ConnectionScheduleTimeUnit = "weeks"
	ConnectionScheduleTimeUnitMonths  ConnectionScheduleTimeUnit = "months"
)

func (e ConnectionScheduleTimeUnit) ToPointer() *ConnectionScheduleTimeUnit {
	return &e
}

func (e *ConnectionScheduleTimeUnit) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "minutes":
		fallthrough
	case "hours":
		fallthrough
	case "days":
		fallthrough
	case "weeks":
		fallthrough
	case "months":
		*e = ConnectionScheduleTimeUnit(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectionScheduleTimeUnit: %v", v)
	}
}

// ConnectionSchedule - if null, then no schedule is set.
type ConnectionSchedule struct {
	TimeUnit ConnectionScheduleTimeUnit `json:"timeUnit"`
	Units    int64                      `json:"units"`
}
