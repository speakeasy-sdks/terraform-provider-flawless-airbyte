// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/flawless/terraform-provider-airbyte/internal/sdk/pkg/utils"
)

type CompleteSourceOauthRequest struct {
	// The values required to configure OAuth flows. The schema for this must match the `OAuthConfigSpecification.oauthUserInputFromConnectorConfigSpecification` schema.
	OAuthInputConfiguration interface{} `json:"oAuthInputConfiguration,omitempty"`
	// The query parameters present in the redirect URL after a user granted consent e.g auth code
	QueryParams map[string]interface{} `json:"queryParams,omitempty"`
	// When completing OAuth flow to gain an access token, some API sometimes requires to verify that the app re-send the redirectUrl that was used when consent was given.
	RedirectURL *string `json:"redirectUrl,omitempty"`
	// If set to true, returns a secret coordinate which references the stored tokens. By default, returns raw tokens.
	ReturnSecretCoordinate *bool   `default:"false" json:"returnSecretCoordinate"`
	SourceDefinitionID     string  `json:"sourceDefinitionId"`
	SourceID               *string `json:"sourceId,omitempty"`
	WorkspaceID            string  `json:"workspaceId"`
}

func (c CompleteSourceOauthRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CompleteSourceOauthRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CompleteSourceOauthRequest) GetOAuthInputConfiguration() interface{} {
	if o == nil {
		return nil
	}
	return o.OAuthInputConfiguration
}

func (o *CompleteSourceOauthRequest) GetQueryParams() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.QueryParams
}

func (o *CompleteSourceOauthRequest) GetRedirectURL() *string {
	if o == nil {
		return nil
	}
	return o.RedirectURL
}

func (o *CompleteSourceOauthRequest) GetReturnSecretCoordinate() *bool {
	if o == nil {
		return nil
	}
	return o.ReturnSecretCoordinate
}

func (o *CompleteSourceOauthRequest) GetSourceDefinitionID() string {
	if o == nil {
		return ""
	}
	return o.SourceDefinitionID
}

func (o *CompleteSourceOauthRequest) GetSourceID() *string {
	if o == nil {
		return nil
	}
	return o.SourceID
}

func (o *CompleteSourceOauthRequest) GetWorkspaceID() string {
	if o == nil {
		return ""
	}
	return o.WorkspaceID
}
