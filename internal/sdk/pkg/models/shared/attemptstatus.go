// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AttemptStatus string

const (
	AttemptStatusRunning   AttemptStatus = "running"
	AttemptStatusFailed    AttemptStatus = "failed"
	AttemptStatusSucceeded AttemptStatus = "succeeded"
)

func (e AttemptStatus) ToPointer() *AttemptStatus {
	return &e
}

func (e *AttemptStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "running":
		fallthrough
	case "failed":
		fallthrough
	case "succeeded":
		*e = AttemptStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AttemptStatus: %v", v)
	}
}
